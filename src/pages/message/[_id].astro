---
import Layout from '../../layouts/BaseLayout.astro';  
import CardMessage from '../../components/CardMessage.astro';
import EditAndDeleteMenu from '../../components/EditAndDeleteMenu.jsx'
// Ambil parameter _id dari URL
const { _id } = Astro.params;
const endpoint = `https://pikm-pj8ksyy1gtrn.deno.dev/messages/${_id}`;

let message = { error: false }; // Default empty message object
try {
  const response = await fetch(endpoint);
  if (!response.ok) {
    throw new Error('Failed to fetch message');
  }
  message = await response.json();
} catch (error) {
  message = { error: true, message: 'Failed to load the message. Please try again later.' };
  console.error('Error:', error.message);
}

---
<Layout title="Postingan">
  <div class="postbox" client:load>
    <div class="menu-box">
      <button id="backButton">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 448 512">
          <path d="M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z"/>
        </svg>
      </button>
      <EditAndDeleteMenu
        user={message.user}
        id={_id} 
        client:only="react" 
      />
    </div>
    {message.error ? (
      <div class="error-box">
        <p>{message.message}</p>
      </div>
    ) : (
      <CardMessage 
        href={`#`}
        text={message.text}
        likes={message.likes}
        createdAt={message.createdAt}
        _id={message._id}
        user={message.user}
      />
    )}
  </div>
</Layout>

<style>
  .postbox{
    display: flex;
    flex-direction: column;
    gap: 10px;
    margin: 0 0 20px 0;
  }

  a {
    text-decoration: none;
    color: #333;
  }

  .menu-box {
    display: flex;
    justify-content: space-between;
    align-items: center;
  }

  .menu-box button {
    background-color: #333;
    color: white;
    border: none;
    border-radius: 8px;
    padding: 10px 15px;
    font-size: 0.9rem;
    cursor: pointer;
    transition: background-color 0.2s;
  }

  .menu-box button:hover {
    background-color: #f39c12;
  }

  .menu-box button svg {
    fill: white;
    width: 15px;
  }

  #idPost {
    display: none;
  }

  [data-no-swup] {
    transition: none !important;
  }
</style>

<script>
  // back button
  document.addEventListener('astro:page-load', ()=> {
    document.querySelector('#backButton').addEventListener('click', () => {
    console.log('Back button clicked');
    if (document.referrer) {
      history.back();
    } else {
      window.location.href = '/'; // Fallback jika tidak ada halaman sebelumnya
    }
  });
  })
  
</script>
